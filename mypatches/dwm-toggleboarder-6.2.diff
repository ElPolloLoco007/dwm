diff --color -ruN dwm/config.def.h dwm1/config.def.h
--- dwm/config.def.h	2022-05-14 22:55:09.483257714 +0100
+++ dwm1/config.def.h	2022-05-14 22:55:01.233302985 +0100
@@ -5,6 +5,7 @@
 static const unsigned int snap      = 32;       /* snap pixel */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
+static const int showborder         = 1;        /* 0 means no border */
 static const char *fonts[]          = { "monospace:size=10" };
 static const char dmenufont[]       = "monospace:size=10";
 static const char col_gray1[]       = "#222222";
@@ -65,6 +66,7 @@
 	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
 	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
 	{ MODKEY,                       XK_b,      togglebar,      {0} },
+	{ MODKEY|ShiftMask,             XK_b,      toggleborder,   {0} },
 	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
 	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
 	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
diff --color -ruN dwm/dwm.c dwm1/dwm.c
--- dwm/dwm.c	2022-05-14 22:55:09.483257714 +0100
+++ dwm1/dwm.c	2022-05-15 01:57:48.986451367 +0100
@@ -124,6 +124,7 @@
 	unsigned int tagset[2];
 	int showbar;
 	int topbar;
+	int showborder;
 	Client *clients;
 	Client *sel;
 	Client *stack;
@@ -169,6 +170,7 @@
 static void focusin(XEvent *e);
 static void focusmon(const Arg *arg);
 static void focusstack(const Arg *arg);
+static void toggleborder(const Arg *arg);
 static Atom getatomprop(Client *c, Atom prop);
 static int getrootptr(int *x, int *y);
 static long getstate(Window w);
@@ -641,6 +643,7 @@
 	m->mfact = mfact;
 	m->nmaster = nmaster;
 	m->showbar = showbar;
+	m->showborder = showborder;
 	m->topbar = topbar;
 	m->lt[0] = &layouts[0];
 	m->lt[1] = &layouts[1 % LENGTH(layouts)];
@@ -802,7 +805,9 @@
 		detachstack(c);
 		attachstack(c);
 		grabbuttons(c, 1);
-		XSetWindowBorder(dpy, c->win, scheme[SchemeSel][ColBorder].pixel);
+		if (selmon->showborder){
+			XSetWindowBorder(dpy, c->win, scheme[SchemeSel][ColBorder].pixel);
+		}
 		setfocus(c);
 	} else {
 		XSetInputFocus(dpy, root, RevertToPointerRoot, CurrentTime);
@@ -862,6 +867,17 @@
 	}
 }
 
+void
+toggleborder(const Arg *arg)
+{
+	selmon->showborder = !selmon->showborder;
+	if (selmon->showborder){
+		XSetWindowBorder(dpy, selmon->sel->win, scheme[SchemeSel][ColBorder].pixel);
+	}else{
+		XSetWindowBorder(dpy, selmon->sel->win, scheme[SchemeSel][ColBg].pixel);
+	}
+}
+
 Atom
 getatomprop(Client *c, Atom prop)
 {
-- 
1.0.0