From: <Saved by Blink>
Snapshot-Content-Location: https://dwm.suckless.org/patches/pertag/dwm-pertag-20200914-61bb8b2.diff
Subject: 
Date: Mon, 11 Apr 2022 15:35:50 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--8JYs3fy0DvIVCnqLqQDnr5M0jcb65JzXJOw659NzF1----"


------MultipartBoundary--8JYs3fy0DvIVCnqLqQDnr5M0jcb65JzXJOw659NzF1----
Content-Type: text/html
Content-ID: <frame-C4A21737FDFADE2108541B507A64279F@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://dwm.suckless.org/patches/pertag/dwm-pertag-20200914-61bb8b2.diff

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3Dwindows-1252"><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css=
-716e9b43-8efe-4c11-b8f4-a2284dfc9cdf@mhtml.blink" /></head><body><pre styl=
e=3D"word-wrap: break-word; white-space: pre-wrap;">diff --git a/dwm.c b/dw=
m.c
index 664c527..ac8e4ec 100644
--- a/dwm.c
+++ b/dwm.c
@@ -111,6 +111,7 @@ typedef struct {
 	void (*arrange)(Monitor *);
 } Layout;
=20
+typedef struct Pertag Pertag;
 struct Monitor {
 	char ltsymbol[16];
 	float mfact;
@@ -130,6 +131,7 @@ struct Monitor {
 	Monitor *next;
 	Window barwin;
 	const Layout *lt[2];
+	Pertag *pertag;
 };
=20
 typedef struct {
@@ -272,6 +274,15 @@ static Window root, wmcheckwin;
 /* configuration, allows nested code to access above variables */
 #include "config.h"
=20
+struct Pertag {
+	unsigned int curtag, prevtag; /* current and previous tag */
+	int nmasters[LENGTH(tags) + 1]; /* number of windows in master area */
+	float mfacts[LENGTH(tags) + 1]; /* mfacts per tag */
+	unsigned int sellts[LENGTH(tags) + 1]; /* selected layouts */
+	const Layout *ltidxs[LENGTH(tags) + 1][2]; /* matrix of tags and layouts =
indexes  */
+	int showbars[LENGTH(tags) + 1]; /* display bar for the current tag */
+};
+
 /* compile-time check if all tags fit into an unsigned int bit array. */
 struct NumTags { char limitexceeded[LENGTH(tags) &gt; 31 ? -1 : 1]; };
=20
@@ -632,6 +643,7 @@ Monitor *
 createmon(void)
 {
 	Monitor *m;
+	unsigned int i;
=20
 	m =3D ecalloc(1, sizeof(Monitor));
 	m-&gt;tagset[0] =3D m-&gt;tagset[1] =3D 1;
@@ -642,6 +654,20 @@ createmon(void)
 	m-&gt;lt[0] =3D &amp;layouts[0];
 	m-&gt;lt[1] =3D &amp;layouts[1 % LENGTH(layouts)];
 	strncpy(m-&gt;ltsymbol, layouts[0].symbol, sizeof m-&gt;ltsymbol);
+	m-&gt;pertag =3D ecalloc(1, sizeof(Pertag));
+	m-&gt;pertag-&gt;curtag =3D m-&gt;pertag-&gt;prevtag =3D 1;
+
+	for (i =3D 0; i &lt;=3D LENGTH(tags); i++) {
+		m-&gt;pertag-&gt;nmasters[i] =3D m-&gt;nmaster;
+		m-&gt;pertag-&gt;mfacts[i] =3D m-&gt;mfact;
+
+		m-&gt;pertag-&gt;ltidxs[i][0] =3D m-&gt;lt[0];
+		m-&gt;pertag-&gt;ltidxs[i][1] =3D m-&gt;lt[1];
+		m-&gt;pertag-&gt;sellts[i] =3D m-&gt;sellt;
+
+		m-&gt;pertag-&gt;showbars[i] =3D m-&gt;showbar;
+	}
+
 	return m;
 }
=20
@@ -967,7 +993,7 @@ grabkeys(void)
 void
 incnmaster(const Arg *arg)
 {
-	selmon-&gt;nmaster =3D MAX(selmon-&gt;nmaster + arg-&gt;i, 0);
+	selmon-&gt;nmaster =3D selmon-&gt;pertag-&gt;nmasters[selmon-&gt;pertag-&=
gt;curtag] =3D MAX(selmon-&gt;nmaster + arg-&gt;i, 0);
 	arrange(selmon);
 }
=20
@@ -1502,9 +1528,9 @@ void
 setlayout(const Arg *arg)
 {
 	if (!arg || !arg-&gt;v || arg-&gt;v !=3D selmon-&gt;lt[selmon-&gt;sellt])
-		selmon-&gt;sellt ^=3D 1;
+		selmon-&gt;sellt =3D selmon-&gt;pertag-&gt;sellts[selmon-&gt;pertag-&gt;=
curtag] ^=3D 1;
 	if (arg &amp;&amp; arg-&gt;v)
-		selmon-&gt;lt[selmon-&gt;sellt] =3D (Layout *)arg-&gt;v;
+		selmon-&gt;lt[selmon-&gt;sellt] =3D selmon-&gt;pertag-&gt;ltidxs[selmon-=
&gt;pertag-&gt;curtag][selmon-&gt;sellt] =3D (Layout *)arg-&gt;v;
 	strncpy(selmon-&gt;ltsymbol, selmon-&gt;lt[selmon-&gt;sellt]-&gt;symbol, =
sizeof selmon-&gt;ltsymbol);
 	if (selmon-&gt;sel)
 		arrange(selmon);
@@ -1523,7 +1549,7 @@ setmfact(const Arg *arg)
 	f =3D arg-&gt;f &lt; 1.0 ? arg-&gt;f + selmon-&gt;mfact : arg-&gt;f - 1.0=
;
 	if (f &lt; 0.05 || f &gt; 0.95)
 		return;
-	selmon-&gt;mfact =3D f;
+	selmon-&gt;mfact =3D selmon-&gt;pertag-&gt;mfacts[selmon-&gt;pertag-&gt;c=
urtag] =3D f;
 	arrange(selmon);
 }
=20
@@ -1702,7 +1728,7 @@ tile(Monitor *m)
 void
 togglebar(const Arg *arg)
 {
-	selmon-&gt;showbar =3D !selmon-&gt;showbar;
+	selmon-&gt;showbar =3D selmon-&gt;pertag-&gt;showbars[selmon-&gt;pertag-&=
gt;curtag] =3D !selmon-&gt;showbar;
 	updatebarpos(selmon);
 	XMoveResizeWindow(dpy, selmon-&gt;barwin, selmon-&gt;wx, selmon-&gt;by, s=
elmon-&gt;ww, bh);
 	arrange(selmon);
@@ -1741,9 +1767,33 @@ void
 toggleview(const Arg *arg)
 {
 	unsigned int newtagset =3D selmon-&gt;tagset[selmon-&gt;seltags] ^ (arg-&=
gt;ui &amp; TAGMASK);
+	int i;
=20
 	if (newtagset) {
 		selmon-&gt;tagset[selmon-&gt;seltags] =3D newtagset;
+
+		if (newtagset =3D=3D ~0) {
+			selmon-&gt;pertag-&gt;prevtag =3D selmon-&gt;pertag-&gt;curtag;
+			selmon-&gt;pertag-&gt;curtag =3D 0;
+		}
+
+		/* test if the user did not select the same tag */
+		if (!(newtagset &amp; 1 &lt;&lt; (selmon-&gt;pertag-&gt;curtag - 1))) {
+			selmon-&gt;pertag-&gt;prevtag =3D selmon-&gt;pertag-&gt;curtag;
+			for (i =3D 0; !(newtagset &amp; 1 &lt;&lt; i); i++) ;
+			selmon-&gt;pertag-&gt;curtag =3D i + 1;
+		}
+
+		/* apply settings for this view */
+		selmon-&gt;nmaster =3D selmon-&gt;pertag-&gt;nmasters[selmon-&gt;pertag-=
&gt;curtag];
+		selmon-&gt;mfact =3D selmon-&gt;pertag-&gt;mfacts[selmon-&gt;pertag-&gt;=
curtag];
+		selmon-&gt;sellt =3D selmon-&gt;pertag-&gt;sellts[selmon-&gt;pertag-&gt;=
curtag];
+		selmon-&gt;lt[selmon-&gt;sellt] =3D selmon-&gt;pertag-&gt;ltidxs[selmon-=
&gt;pertag-&gt;curtag][selmon-&gt;sellt];
+		selmon-&gt;lt[selmon-&gt;sellt^1] =3D selmon-&gt;pertag-&gt;ltidxs[selmo=
n-&gt;pertag-&gt;curtag][selmon-&gt;sellt^1];
+
+		if (selmon-&gt;showbar !=3D selmon-&gt;pertag-&gt;showbars[selmon-&gt;pe=
rtag-&gt;curtag])
+			togglebar(NULL);
+
 		focus(NULL);
 		arrange(selmon);
 	}
@@ -2038,11 +2088,37 @@ updatewmhints(Client *c)
 void
 view(const Arg *arg)
 {
+	int i;
+	unsigned int tmptag;
+
 	if ((arg-&gt;ui &amp; TAGMASK) =3D=3D selmon-&gt;tagset[selmon-&gt;seltag=
s])
 		return;
 	selmon-&gt;seltags ^=3D 1; /* toggle sel tagset */
-	if (arg-&gt;ui &amp; TAGMASK)
+	if (arg-&gt;ui &amp; TAGMASK) {
 		selmon-&gt;tagset[selmon-&gt;seltags] =3D arg-&gt;ui &amp; TAGMASK;
+		selmon-&gt;pertag-&gt;prevtag =3D selmon-&gt;pertag-&gt;curtag;
+
+		if (arg-&gt;ui =3D=3D ~0)
+			selmon-&gt;pertag-&gt;curtag =3D 0;
+		else {
+			for (i =3D 0; !(arg-&gt;ui &amp; 1 &lt;&lt; i); i++) ;
+			selmon-&gt;pertag-&gt;curtag =3D i + 1;
+		}
+	} else {
+		tmptag =3D selmon-&gt;pertag-&gt;prevtag;
+		selmon-&gt;pertag-&gt;prevtag =3D selmon-&gt;pertag-&gt;curtag;
+		selmon-&gt;pertag-&gt;curtag =3D tmptag;
+	}
+
+	selmon-&gt;nmaster =3D selmon-&gt;pertag-&gt;nmasters[selmon-&gt;pertag-&=
gt;curtag];
+	selmon-&gt;mfact =3D selmon-&gt;pertag-&gt;mfacts[selmon-&gt;pertag-&gt;c=
urtag];
+	selmon-&gt;sellt =3D selmon-&gt;pertag-&gt;sellts[selmon-&gt;pertag-&gt;c=
urtag];
+	selmon-&gt;lt[selmon-&gt;sellt] =3D selmon-&gt;pertag-&gt;ltidxs[selmon-&=
gt;pertag-&gt;curtag][selmon-&gt;sellt];
+	selmon-&gt;lt[selmon-&gt;sellt^1] =3D selmon-&gt;pertag-&gt;ltidxs[selmon=
-&gt;pertag-&gt;curtag][selmon-&gt;sellt^1];
+
+	if (selmon-&gt;showbar !=3D selmon-&gt;pertag-&gt;showbars[selmon-&gt;per=
tag-&gt;curtag])
+		togglebar(NULL);
+
 	focus(NULL);
 	arrange(selmon);
 }
</pre></body></html>
------MultipartBoundary--8JYs3fy0DvIVCnqLqQDnr5M0jcb65JzXJOw659NzF1----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-716e9b43-8efe-4c11-b8f4-a2284dfc9cdf@mhtml.blink

@charset "utf-8";
=0A
------MultipartBoundary--8JYs3fy0DvIVCnqLqQDnr5M0jcb65JzXJOw659NzF1------
